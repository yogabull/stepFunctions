{
    "Comment": "Collects weather from Tokyo and London and then writes it to DynamoDB.",
    "StartAt": "Pass",
    "States": {
      "Pass": {
        "Type": "Pass",
        "Next": "weather-portland"
      },
      "weather-portland": {
        "Type": "Task",
        "Resource": "arn:aws:states:::lambda:invoke",
        "Parameters": {
          "FunctionName": "arn:aws:lambda:us-east-2:046792793126:function:portland_weather:$LATEST"
        },
        "Retry": [
          {
            "ErrorEquals": [
              "Lambda.ServiceException",
              "Lambda.AWSLambdaException",
              "Lambda.SdkClientException"
            ],
            "IntervalSeconds": 2,
            "MaxAttempts": 6,
            "BackoffRate": 2
          }
        ],
        "Next": "Pass (1)",
        "ResultPath": "$.body"
      },
      "Pass (1)": {
        "Type": "Pass",
        "Next": "weather-london"
      },
      "weather-london": {
        "Type": "Task",
        "Resource": "arn:aws:states:::lambda:invoke",
        "OutputPath": "$.Payload",
        "Parameters": {
          "Payload.$": "$",
          "FunctionName": "arn:aws:lambda:us-east-2:046792793126:function:portland_weather:$LATEST"
        },
        "Retry": [
          {
            "ErrorEquals": [
              "Lambda.ServiceException",
              "Lambda.AWSLambdaException",
              "Lambda.SdkClientException"
            ],
            "IntervalSeconds": 2,
            "MaxAttempts": 6,
            "BackoffRate": 2
          }
        ],
        "Next": "Pass (2)"
      },
      "Pass (2)": {
        "Type": "Pass",
        "Next": "DynamoDB PutItem"
      },
      "DynamoDB PutItem": {
        "Type": "Task",
        "Resource": "arn:aws:states:::dynamodb:putItem",
        "Parameters": {
          "TableName": "MyDynamoDBTable",
          "Item": {
            "Column": {
              "S": "MyEntry"
            }
          }
        },
        "Next": "Success"
      },
      "Success": {
        "Type": "Succeed"
      }
    }
  }